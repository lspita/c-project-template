name: CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Format files
        id: format
        run: >
          find . -name '*.c' -o -name '*.h' -o -name '*.cpp' -o -name '*.hpp'
          -exec clang-format --dry-run --Werror {} +

  build:
    needs: format
    runs-on: ${{ matrix.os }}
    strategy:
      # matrix to run every build type on:
      # 1. Windows with MSVC compiler
      # 2. Linux with GCC
      # 3. Linux with Clang
      # 3. MacOS with Clang
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        cmake_preset: [ci-workflow]
        build_type: [Debug, Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure CMake
        run: >
          cmake 
          --preset ${{ matrix.cmake_preset }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Tidy
        run: >
          run-clang-tidy -p build/bin/${{ matrix.cmake_preset }}

      - name: Build
        run: >
          cmake --build
          --preset ${{ matrix.cmake_preset }}
          --config ${{ matrix.build_type }}

      - name: Test
        run: >
          ctest
          --preset ${{ matrix.cmake_preset }}
          -C ${{ matrix.build_type }}
